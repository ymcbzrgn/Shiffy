# =============================================================================
# Shiffy Backend - Environment Variables Template
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to git!

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=3000
API_BASE_URL=http://localhost:3000

# =============================================================================
# SUPABASE (PostgreSQL Database + Manager Auth)
# =============================================================================
# Get from: https://supabase.com/dashboard/project/YOUR_PROJECT/settings/api
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_SERVICE_KEY=your_service_role_key_here_not_anon_key

# IMPORTANT: Use SERVICE ROLE key (not anon key)
# Service role bypasses Row Level Security (RLS) - needed for backend operations

# =============================================================================
# JWT (Employee Authentication)
# =============================================================================
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your_256_bit_random_secret_here
JWT_EXPIRY=7d

# IMPORTANT: Use different secret for production!

# =============================================================================
# RUNPOD LLAMA API (AI Schedule Generation)
# =============================================================================
# Get from: RunPod Dashboard → Your Pod → HTTP Service
# Port 8888 for custom FastAPI proxy with system prompt support
RUNPOD_API_URL=https://ejwkzjotxfg3i7-8888.proxy.runpod.net
RUNPOD_API_KEY=your_custom_api_key_here

# Model: llama3.1:8b-instruct-q6_K (via Ollama on RTX A4000)
# Endpoints: /api/generate-with-system, /api/generate-schedule-batch
# Strategy: Prompt engineering only (no RAG, no fine-tuning)

# =============================================================================
# CORS (Cross-Origin Resource Sharing)
# =============================================================================
# Comma-separated list of allowed origins
# Local: Include localhost + mobile simulator IPs
CORS_ORIGIN=http://localhost:3000,http://localhost:19000,exp://192.168.1.100:8081

# Production: Use only your domain
# CORS_ORIGIN=https://shiffy.com,https://www.shiffy.com

# =============================================================================
# RATE LIMITING (DDoS Protection)
# =============================================================================
RATE_LIMIT_ENABLED=false
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000

# Local: Disabled for easier testing
# Production: Enabled with stricter limits (e.g., 100 requests)

# =============================================================================
# LOGGING
# =============================================================================
LOG_LEVEL=debug

# Levels: debug (verbose) | info (standard) | warn | error (minimal)
# Local: debug
# Production: info or warn

# =============================================================================
# OPTIONAL: Error Tracking (Post-MVP)
# =============================================================================
# SENTRY_DSN=https://xxx@sentry.io/xxx
# SENTRY_ENVIRONMENT=development

# =============================================================================
# OPTIONAL: Notifications (Post-MVP)
# =============================================================================
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/xxx
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/xxx
